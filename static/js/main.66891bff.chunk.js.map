{"version":3,"sources":["colors.ts","components/helpers/transformer.ts","context.ts","components/footer.tsx","components/header.tsx","components/circle.tsx","components/icons.tsx","components/color.tsx","components/colors.tsx","components/main.tsx","App.tsx","registerServiceWorker.ts","index.tsx"],"names":["colors","rgb2yiq","rgb","defaultColorIndex","Context","React","selectedColor","contrastColor","selectColor","Footer","react","context","Consumer","_ref","className","href","rel","Header","Circle","_ref$progress","progress","_ref$animate","animate","_ref$animationDuratio","animationDuration","_ref$showPercentage","showPercentage","_ref$progressColor","progressColor","_ref$bgColor","bgColor","_ref$textColor","textColor","_ref$size","size","_ref$lineWidth","lineWidth","_ref$verticleSpacing","verticleSpacing","_ref$roundedStroke","roundedStroke","_ref$responsive","responsive","_ref$textClass","textClass","radius","childElem","fill","x","y","dy","textAnchor","perimeter","Math","round","PI","strokeDashoffset","transition","concat","undefined","strokeLinecap","svgSize","viewBox","join","transform","width","height","stroke","cx","cy","r","strokeWidth","strokeDasharray","style","Github","version","aria-hidden","fillRule","d","color","circle","Cmyk","_ref2","label","color_Circle","Rgb","_ref3","value","ColorPanel","_ref4","str","cmyk","map","i","Number","slice","color_Cmyk","pop-content","hex","color_Rgb","ColorName","_ref5","key","kanji","name","Navigator","icons_Github","Color","_ref6","color_ColorPanel","color_ColorName","color_Navigator","ColorLine","index","onClick","e","backgroundColor","colors_ColorLine","Colors","colors_Color","Main","components_colors","color_Color","App","state","_this","bind","Object","assertThisInitialized","arguments","length","this","setState","Provider","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","ReactDOM","src_App","document","getElementById","URL","process","toString","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.66891bff.chunk.js","sourcesContent":["import data from './colors.json'\n\n\nexport interface IColorData {\n  name: string,\n  kanji: string,\n  cmyk: string,\n  rgb: number[],\n  hex: string\n}\n\n\nexport const colors: IColorData[] = data.colors\n\n\nexport default colors\n","// tslint:disable\nexport const rgb2yiq = (rgb: number[]) => ((rgb[0] * 299) + (rgb[1] * 587) + (rgb[2] * 114)) / 1000 > 128 ? 'initial' : 'white'\n\nexport const str2cmyk = (str: string) => [0, 1, 2, 3].map(i => Number(str.slice(i * 3, i * 3 + 3)))\n","import * as React from 'react'\nimport { colors, IColorData } from './colors'\nimport { rgb2yiq } from './components/helpers/transformer'\n\n\nexport const defaultColorIndex = 15\n\n\nexport interface IContext {\n  selectedColor: IColorData,\n  contrastColor: string,\n  selectColor: (...args: any[]) => void\n}\n\n\nconst Context = React.createContext<IContext>({\n  selectedColor: colors[defaultColorIndex],\n  contrastColor: rgb2yiq(colors[defaultColorIndex].rgb),\n  selectColor: () => {}\n})\n\n\nexport default Context\n","import * as React from 'react'\nimport Context from '../context'\n\n\nexport default function Footer () {\n  return (\n    <Context.Consumer>\n      {({ contrastColor }) => (\n        <footer className=\"text-right\">\n          <div className={contrastColor}>\n            <span>Copyright © 2019 Sy. </span>\n            <div className=\"block d-sm-none\" />\n            <span>Exported from: </span><cite><a href=\"http://nipponcolors.com\" rel=\"noopener\">NIPPON COLORS - 日本の伝統色</a>.</cite>\n          </div>\n        </footer>\n      )}\n    </Context.Consumer>\n  )\n}\n","import * as React from 'react'\n\n\nexport default function Header () {\n  return (\n    <header>\n      <div className=\"hidden\"> Hidden </div>\n    </header>\n  )\n}\n","/**\n * @file react-circle from https://github.com/zzarcon/react-circle\n * @author Hector Zarco <hezarco@gmail.com>\n * @author Sy <somarl@live.com>\n * @license MIT License Copyright (c) 2018 Hector Zarco\n */\nimport * as React from 'react'\n\n\nexport interface CircleProps {\n  progress: number\n  animate?: boolean\n  animationDuration?: string\n  showPercentage?: boolean\n  progressColor?: string\n  bgColor?: string\n  textColor?: string\n  size?: number\n  lineWidth?: number\n  verticleSpacing?: string\n  roundedStroke?: boolean\n  responsive?: boolean\n  textClass?: string\n}\n\n\nconst Circle = ({\n  progress = 0,\n  animate = true,\n  animationDuration = '2s',\n  showPercentage = true,\n  progressColor = 'rgb(76, 154, 255)',\n  bgColor = 'rgba(200, 200, 200, 0.6)',\n  textColor = '#6b778c',\n  size = 100,\n  lineWidth = 25,\n  verticleSpacing = '0.35em',\n  roundedStroke = false,\n  responsive = false,\n  textClass = 'react-circle-text'\n}: CircleProps) => {\n  const VIEWPORT = 200\n  const radius = VIEWPORT - lineWidth\n\n  const childElem = showPercentage\n    ? (\n      <text className={textClass} fill={textColor} x={radius} y={radius} dy={verticleSpacing} textAnchor=\"middle\">\n        {progress}\n      </text>\n    )\n    : ''\n\n  const perimeter = Math.round(Math.PI * radius * 2)\n  const strokeDashoffset = Math.round((100 - progress) / 100 * perimeter)\n  const transition = animate ? `stroke-dashoffset ${animationDuration} ease-out` : undefined\n  const strokeLinecap = roundedStroke ? 'round' : 'butt'\n  const svgSize = responsive ? '100%' : size\n\n  const offSet = lineWidth!\n  const viewBox = [-offSet, -offSet, (offSet + radius) * 2, (offSet + radius) * 2].join(' ')\n  const transform = `rotate(-90 ${radius} ${radius})`\n\n  return (\n    <svg width={svgSize} height={svgSize} viewBox={viewBox}>\n      <circle stroke={bgColor} cx={radius} cy={radius} r={radius} strokeWidth={lineWidth} fill=\"none\"/>\n      <circle stroke={progressColor} transform={transform} cx={radius} cy={radius} r={radius} strokeDasharray={perimeter} strokeWidth={lineWidth} strokeDashoffset={perimeter} strokeLinecap={strokeLinecap} fill=\"none\" style={{ strokeDashoffset, transition }} />\n      {childElem}\n    </svg>\n  )\n}\n\nexport default Circle\n","import * as React from 'react'\n// tslint:disable:max-line-length\n\n\nexport const Clippy = () => (\n  <svg className=\"octicon octicon-clippy\" viewBox=\"0 0 14 16\" version=\"1.1\" width=\"14\" height=\"16\" aria-hidden=\"true\"><path fillRule=\"evenodd\" d=\"M2 13h4v1H2v-1zm5-6H2v1h5V7zm2 3V8l-3 3 3 3v-2h5v-2H9zM4.5 9H2v1h2.5V9zM2 12h2.5v-1H2v1zm9 1h1v2c-.02.28-.11.52-.3.7-.19.18-.42.28-.7.3H1c-.55 0-1-.45-1-1V4c0-.55.45-1 1-1h3c0-1.11.89-2 2-2 1.11 0 2 .89 2 2h3c.55 0 1 .45 1 1v5h-1V6H1v9h10v-2zM2 5h8c0-.55-.45-1-1-1H8c-.55 0-1-.45-1-1s-.45-1-1-1-1 .45-1 1-.45 1-1 1H3c-.55 0-1 .45-1 1z\" /></svg>\n)\n\n\nexport const Github = () => (\n  <svg className=\"octicon octicon-mark-github\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"24\" height=\"24\" aria-hidden=\"true\"><path fillRule=\"evenodd\" d=\"M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59.4.07.55-.17.55-.38 0-.19-.01-.82-.01-1.49-2.01.37-2.53-.49-2.69-.94-.09-.23-.48-.94-.82-1.13-.28-.15-.68-.52-.01-.53.63-.01 1.08.58 1.23.82.72 1.21 1.87.87 2.33.66.07-.52.28-.87.51-1.07-1.78-.2-3.64-.89-3.64-3.95 0-.87.31-1.59.82-2.15-.08-.2-.36-1.02.08-2.12 0 0 .67-.21 2.2.82.64-.18 1.32-.27 2-.27.68 0 1.36.09 2 .27 1.53-1.04 2.2-.82 2.2-.82.44 1.1.16 1.92.08 2.12.51.56.82 1.27.82 2.15 0 3.07-1.87 3.75-3.65 3.95.29.25.54.73.54 1.48 0 1.07-.01 1.93-.01 2.2 0 .21.15.46.55.38A8.013 8.013 0 0 0 16 8c0-4.42-3.58-8-8-8z\" /></svg>\n)\n","import * as React from 'react'\nimport ReactCircle from './circle'\nimport { IColorData } from '../colors'\nimport { Github } from './icons'\nimport { str2cmyk } from './helpers/transformer'\n\n\ninterface IColorProps {\n  color: IColorData\n}\n\ninterface ICircleProps {\n  progress: number\n  color: string\n}\n\ninterface ICmykProps extends ICircleProps {\n  label: 'C' | 'M' | 'Y' | 'K'\n}\n\ninterface IRgbProps {\n  label: 'R' | 'G' | 'B'\n  value: number\n}\n\n\n// tslint:disable: jsx-alignment no-magic-numbers\nconst Circle = ({ progress, color }: ICircleProps) => (\n  <ReactCircle progress={progress} progressColor={color} textColor={color} size={50} lineWidth={15} />\n)\n\n\nconst Cmyk = ({ label, progress, color }: ICmykProps) => (\n  <div className=\"color-box\">\n    <div className=\"color-label font-sans\">{label}</div>\n    <div className=\"color-circle\"><Circle progress={progress} color={color} /></div>\n  </div>\n)\n\n\nconst Rgb = ({ label, value }: IRgbProps) => (\n  <div className=\"color-box\">\n    <div className=\"color-label font-sans\">{label}</div>\n    <div className=\"color-value text-right\">{value}</div>\n  </div>\n)\n\n\nconst ColorPanel = ({ color }: IColorProps) => {\n  const cmyk = str2cmyk(color.cmyk)\n  return (\n  <ul className=\"xs-no-margin font-open-sans-light relative\">\n    <li className=\"spliter\" />\n    <li><Cmyk label=\"C\" progress={cmyk[0]} color=\"cyan\" /></li>\n    <li className=\"spliter\" />\n    <li><Cmyk label=\"M\" progress={cmyk[1]} color=\"magenta\" /></li>\n    <li className=\"spliter\" />\n    <li><Cmyk label=\"Y\" progress={cmyk[2]} color=\"yellow\" /></li>\n    <li className=\"spliter\" />\n    <li><Cmyk label=\"K\" progress={cmyk[3]} color=\"black\" /></li>\n    <li className=\"spliter\" />\n    <li pop-content={color.hex}><Rgb label=\"R\" value={color.rgb[0]} /></li>\n    <li className=\"spliter\" />\n    <li pop-content={color.hex}><Rgb label=\"G\" value={color.rgb[1]} /></li>\n    <li className=\"spliter\" />\n    <li pop-content={color.hex}><Rgb label=\"B\" value={color.rgb[2]} /></li>\n    <li className=\"spliter\" />\n  </ul>\n)}\n\n\nconst ColorName = ({ color }: IColorProps) => (\n  <div className=\"row justify-content-around\">\n    <div className=\"col xs-no-padding\" />\n    <div className=\"col col-auto\">\n      <div className=\"col color-name\">\n        <div className=\"color-name-kanji rem-4 font-kai fade-in\" key={color.hex + 'kanji'}>{color.kanji}</div>\n        <div className=\"color-name-roma font-eb-garamond fade-in\" key={color.hex + 'name'}>{color.name}</div>\n      </div>\n    </div>\n    <div className=\"col\" />\n  </div>\n)\n\n\nconst Navigator = () => (\n  <div>\n    <div className=\"red-circle\" />\n    <div className=\"text-verticle rem-2 font-bebas-neue\">NIPPON COLORS</div>\n    <div className=\"github\"><a href=\"https://github.com/qotes/Colors\" rel=\"noopener\"><Github /></a></div>\n  </div>\n)\n\n\nexport default function Color ({ color }: IColorProps) {\n  return (\n    <div className=\"row justify-content-around color sticky\">\n      <div className=\"col col-auto color-panel\">\n        <ColorPanel color={color} />\n      </div>\n\n      <div className=\"col\">\n        <ColorName color={color} />\n      </div>\n\n      <div className=\"col col-auto navigator hidden d-md-block\">\n        <Navigator />\n      </div>\n    </div>\n  )\n}\n","import * as React from 'react'\nimport { colors, IColorData } from '../colors'\nimport Context from '../context'\n\n\ninterface IColorProps {\n  index: number\n  color: IColorData\n}\n\ninterface IColorLineProps {\n  value: number\n}\n\n\nconst ColorLine = ({value}: IColorLineProps) => (\n  <div className=\"color-line-wrapper\">\n    <div className=\"color-line\" style={{width: `${value / 256 * 100}%`}} />\n  </div>\n)\n\n\n// tslint:disable:jsx-no-lambda\nconst Color = ({ color, index }: IColorProps) => (\n  <Context.Consumer>\n    {({ selectColor }) => (\n      <li className=\"color\" onClick={(e: React.MouseEvent) => selectColor(index, e)}>\n        <div className=\"row\">\n          <div className=\"col-auto square\" style={{backgroundColor: color.hex}} />\n\n          <div className=\"col description hidden d-md-block\">\n            <div className=\"color-names\">\n              <span className=\"color-kanji font-kai\">{color.kanji}</span>\n              <span className=\"color-hex font-open-sans-light right\">{color.hex}</span>\n            </div>\n            <div className=\"color-lines\">\n              <ColorLine value={color.rgb[0]} />\n              <ColorLine value={color.rgb[1]} />\n              <ColorLine value={color.rgb[2]} />\n            </div>\n            <div className=\"color-values\">\n              <span className=\"color-name font-eb-garamond\">{color.name}</span>\n            </div>\n          </div>\n        </div>\n      </li>\n    )}\n  </Context.Consumer>\n)\n\n\nconst Colors = () => (\n  <ul>\n    {colors.map((color, i) => (<Color color={color} index={i} key={i} />))}\n  </ul>\n)\n\n\nexport default Colors\n","import * as React from 'react'\nimport Color from './color'\nimport Colors from './colors'\nimport Context from '../context'\n\n\nexport default function Main () {\n  return (\n    <Context.Consumer>\n      {({ selectedColor, contrastColor }) => (\n        <main style={{backgroundColor: selectedColor.hex}}>\n          <div className={`container ${contrastColor}`}>\n            <div className=\"row\">\n              <div className=\"col-3 col-md\">\n                <Colors />\n              </div>\n              <div className=\"col-9 col-md\">\n                <Color color={selectedColor} />\n              </div>\n            </div>\n          </div>\n        </main>\n      )}\n    </Context.Consumer>\n  )\n}\n","import * as React from 'react'\nimport Footer from './components/footer'\nimport Header from './components/header'\nimport Main from './components/main'\nimport { rgb2yiq } from './components/helpers/transformer'\nimport Context, { IContext, defaultColorIndex } from './context'\nimport colors from './colors'\n\n\nclass App extends React.Component<{}, IContext> {\n  public state = {\n    selectedColor: colors[defaultColorIndex],\n    contrastColor: rgb2yiq(colors[defaultColorIndex].rgb),\n    selectColor: this.selectColor.bind(this)\n  }\n\n  public selectColor (index: number = defaultColorIndex) {\n    // console.info('clicked', index, colors[index], rgb2yiq(colors[index].rgb))\n    this.setState(state => ({\n      selectedColor: colors[index],\n      contrastColor: rgb2yiq(colors[index].rgb)\n    }))\n  }\n\n  public render () {\n    return (\n      <Context.Provider value={this.state}>\n        <Header />\n        <Main />\n        <Footer />\n      </Context.Provider>\n    )\n  }\n}\n\n\nexport default App\n","// tslint:disable:no-console no-magic-numbers\n// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the 'N+1' visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport default function register () {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL!,\n      window.location.toString()\n    )\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready\n          .then(() => console.log('Is being served cache-first by a service worker.'))\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl)\n      }\n    })\n  }\n}\n\nfunction registerValidSW (swUrl: string) {\n  navigator.serviceWorker.register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker) {\n          installingWorker.onstatechange = () => {\n            if (installingWorker.state !== 'installed') return\n\n            if (navigator.serviceWorker.controller) {\n              // the old content will have been purged and the fresh content will have been added to the cache.\n              console.log('New content is available; please refresh.')\n            } else {\n              // everything has been precached.\n              console.log('Content is cached for offline use.')\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker (swUrl: string) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      if ( // Ensure service worker exists, and that we really are getting a JS file.\n        response.status === 404 ||\n        response.headers.get('content-type')!.indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => window.location.reload())\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl)\n      }\n    })\n    .catch(() => console.log('No internet connection found. Qotes is running offline.'))\n}\n\nexport function unregister () {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => { registration.unregister() })\n  }\n}\n","import * as React from 'react'\nimport * as ReactDOM from 'react-dom'\nimport App from './App'\nimport './css/index.css'\nimport registerServiceWorker from './registerServiceWorker'\n\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n\nregisterServiceWorker()\n"],"sourceRoot":""}